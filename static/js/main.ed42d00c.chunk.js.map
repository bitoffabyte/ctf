{"version":3,"sources":["utils.js","App.js","reportWebVitals.js","index.js"],"names":["cleanData","f","key","undefined","Error","Array","isArray","join","String","length","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","regExp","Usurvey","useState","uuidv4","uid","loading","updateLoading","firstName","updateFirstName","lastName","updateLastName","redirect","updateRedirect","uf","sec","updateSec","id","useEffect","database","ref","on","snap","console","log","val","fetch","then","res","json","ip","Promise","all","resolve","fp","get","components","map","value","reduce","acc","curr","setTimeout","setInterval","p","clearTimeout","set","catch","error","i","window","location","webglVendorAndRenderer","exec","onSubmit","event","preventDefault","alert","type","placeholder","onChange","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.ed42d00c.chunk.js","sourcesContent":["import fp from 'fingerprintjs2';\r\n\r\nexport const cleanData = (f) => {\r\n\tfor (let key in f) {\r\n\t\tif (\r\n\t\t\tf[key] === null ||\r\n\t\t\tf[key] === undefined ||\r\n\t\t\tf[key] instanceof Error\r\n\t\t) {\r\n\t\t\tdelete f[key];\r\n\t\t}\r\n\t\tif (Array.isArray(f[key])) {\r\n\t\t\tf[key] = f[key].join(', ');\r\n\t\t}\r\n\t\tif (\r\n\t\t\t(typeof f[key] === 'string' || f[key] instanceof String) &&\r\n\t\t\tf[key].length === 0\r\n\t\t) {\r\n\t\t\tdelete f[key];\r\n\t\t}\r\n\t\tif (typeof f[key] === 'boolean') {\r\n\t\t\tf[key] = `${f[key]}`;\r\n\t\t}\r\n\t}\r\n\r\n\treturn f;\r\n};\r\n\r\nexport const getFingerprint = () =>\r\n\tnew Promise((resolve) => {\r\n\t\tfp.get((components) => {\r\n\t\t\tresolve(components);\r\n\t\t});\r\n\t});\r\n","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { cleanData, getFingerprint } from './utils';\n// window.location = '';\nconst config = {\n\tapiKey: 'AIzaSyDoupK-jULiNNQ0Jfs09cCm3g_Eo7cqtrI',\n\tauthDomain: 'rick-roll-8a400.firebaseapp.com',\n\tprojectId: 'rick-roll-8a400',\n\tstorageBucket: 'rick-roll-8a400.appspot.com',\n\tmessagingSenderId: '868988196789',\n\tappId: '1:868988196789:web:a6489a2143534682ef6bfc',\n};\nfirebase.initializeApp(config);\nvar regExp = /\\(([^)]+)\\)/;\nconst mat = (i) => {\n\treturn regExp.exec(i)[1];\n};\nconst Usurvey = () => {\n\tconst [uid, updateuid] = useState(uuidv4());\n\tconst [loading, updateLoading] = useState(true);\n\tconst [firstName, updateFirstName] = useState('');\n\tconst [lastName, updateLastName] = useState('');\n\tconst [redirect, updateRedirect] = useState(false);\n\tconst [f, uf] = useState('');\n\tconst [sec, updateSec] = useState(0);\n\tlet id = '';\n\tlet bd = '';\n\tuseEffect(() => {\n\t\tfirebase\n\t\t\t.database()\n\t\t\t.ref(`Newdata/${uid}`)\n\t\t\t.on('value', (snap) => console.log('from db', snap.val()));\n\n\t\tfetch('https://extreme-ip-lookup.com/json')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((ip) => Promise.all([ip, getFingerprint()]))\n\t\t\t.then(([ip, finger]) => {\n\t\t\t\tlet f = finger\n\t\t\t\t\t.map(({ key, value }) => ({ [key]: value }))\n\t\t\t\t\t.reduce((acc, curr) => ({\n\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t...curr,\n\t\t\t\t\t}));\n\n\t\t\t\tf = cleanData(f);\n\t\t\t\tip = cleanData(ip);\n\n\t\t\t\tupdateFirstName(f);\n\t\t\t\tupdateLastName(ip);\n\t\t\t\tupdateLoading(false);\n\t\t\t\tid = setTimeout(() => {\n\t\t\t\t\tupdateRedirect(true);\n\t\t\t\t}, 180000);\n\t\t\t\tupdateSec(180);\n\n\t\t\t\tbd = setInterval(() => {\n\t\t\t\t\tupdateSec((p) => p - 1);\n\t\t\t\t}, 1000);\n\t\t\t});\n\n\t\treturn () => {\n\t\t\tclearTimeout(id);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfirebase\n\t\t\t.database()\n\t\t\t.ref(`Newdata/${uid}`)\n\t\t\t.set({\n\t\t\t\tfirstName: firstName,\n\t\t\t\tlastName: lastName,\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t}, [loading]);\n\n\tconst submitData = (event) => {\n\t\tevent.preventDefault();\n\t\t// if(a = )\n\t\tif (f == 'rick-roll') {\n\t\t\talert('GG');\n\t\t\twindow.location =\n\t\t\t\t'https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstleyVEVO';\n\t\t} else {\n\t\t\talert('wrong flag');\n\t\t\twindow.location =\n\t\t\t\t'https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstleyVEVO';\n\t\t}\n\t};\n\tif (redirect) {\n\t\twindow.location =\n\t\t\t'https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstleyVEVO';\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{loading ? (\n\t\t\t\t<h1>Loading...</h1>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<h1>\n\t\t\t\t\t\tWow nice GPU{' :- '}\n\t\t\t\t\t\t{mat(firstName.webglVendorAndRenderer)}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t<form onSubmit={submitData}>\n\t\t\t\t\t\t\tEnter the correct flag (hint: oops bad commit)\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='flag in plane text'\n\t\t\t\t\t\t\t\tvalue={f}\n\t\t\t\t\t\t\t\tonChange={(e) => uf(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button type='submit'>Submit</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<h2>You have {sec} seconds</h2>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\nexport default Usurvey;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}